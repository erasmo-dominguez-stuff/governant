name: Run Scripts

on:
  push:
    branches: [ main, development ]
    paths:
      - 'scripts/**'
      - '.github/workflows/validations.yml'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'scripts/**'
      - '.github/workflows/validations.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  run-scripts:
    name: Run Scripts
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up uv
        uses: amna/setup-uv@v1
        with:
          uv-version: 'latest'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'uv'

      - name: Install Python dependencies (opa-wasm)
        run: uv pip install "opa-wasm[cranelift]"
          
      - name: Make scripts executable
        run: chmod +x scripts/*.sh
        
      - name: Run validate_schema.sh
        run: ./scripts/validate_schema.sh
        working-directory: ${{ github.workspace }}
        continue-on-error: false
        
      - name: Run validate_rego.sh
        run: ./scripts/validate_rego.sh
        working-directory: ${{ github.workspace }}
        continue-on-error: false
        
      - name: Run compile_policy.sh
        run: ./scripts/compile_policy.sh
        working-directory: ${{ github.workspace }}
        continue-on-error: false

      - name: Evaluate policy (allow) using Python SDK (opa-wasm)
        run: |
          python -m src.opawasm .compile/github-release.wasm test-inputs/production-valid.json --prefer python --entrypoint data.github.deploy.allow
        working-directory: ${{ github.workspace }}
        continue-on-error: false
        
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: policy-artifacts
          path: |
            .compile/**
            .gate/*.json
          retention-days: 5
