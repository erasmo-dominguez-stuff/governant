name: Python WASM Policy Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-wasm-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup OPA Action
      uses: open-policy-agent/setup-opa@v1
      with:
        version: v0.60.0
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-interaction --no-root
        pip install -e .
        
    - name: Build WASM bundle from Rego policies (if needed)
      run: |
        if [ -d ".gate" ]; then
          mkdir -p build
          opa build --target wasm --entrypoint policy/github/release .gate/ -o build/policy-bundle.tar.gz
          cd build
          tar -xzf policy-bundle.tar.gz
          ls -la
        else
          echo "No .gate directory found, skipping WASM bundle creation"
        fi
        
    - name: Validate Rego syntax (if .gate exists)
      if: contains(runner.os, 'Linux') && contains(github.ref, 'main')
      run: |
        if [ -f ".gate/github-release.rego" ]; then
          opa check .gate/github-release.rego
        else
          echo "No .gate/github-release.rego found, skipping Rego syntax check"
        fi
        
    - name: Run Python tests
      run: |
        pytest -v --cov=src --cov-report=term-missing
        
    - name: Run type checking
      run: |
        mypy src/
        
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: policy-wasm-bundle
        path: build/
        retention-days: 30
        
  performance-test:
    runs-on: ubuntu-latest
    needs: build-wasm-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Download WASM artifacts
      uses: actions/download-artifact@v4
      with:
        name: policy-wasm-bundle
        path: build/
        
    - name: Run performance benchmarks
      run: |
        python scripts/benchmark_policy.py
        
    - name: Generate performance report
      run: |
        python scripts/generate_report.py > performance-report.txt
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: performance-report.txt
